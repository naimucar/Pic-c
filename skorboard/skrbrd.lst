CCS PCM C Compiler, Version 4.038, 62930               25-Nis-08 11:54

               Filename: C:\work\skorboard\skrbrd.lst

               ROM used: 811 words (10%)
                         Largest free fragment is 2048
               RAM used: 11 (3%) at main() level
                         23 (6%) worst case
               Stack:    5 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   1D2
0003:  NOP
.................... #include<16f877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
*
0077:  MOVLW  2A
0078:  MOVWF  04
0079:  BCF    03.7
007A:  MOVF   00,W
007B:  BTFSC  03.2
007C:  GOTO   08B
007D:  MOVLW  01
007E:  MOVWF  78
007F:  CLRF   77
0080:  DECFSZ 77,F
0081:  GOTO   080
0082:  DECFSZ 78,F
0083:  GOTO   07F
0084:  MOVLW  4A
0085:  MOVWF  77
0086:  DECFSZ 77,F
0087:  GOTO   086
0088:  GOTO   089
0089:  DECFSZ 00,F
008A:  GOTO   07D
008B:  RETLW  00
.................... #fuses xt,noprotect,nowdt 
.................... #include<ekran.h> 
.................... //////////////////////////////////////////////////////////////// 
.................... // 4x20 lcd lerin 4 Mhz üstünde (max 16MHz) de çalýþmasý için // 
.................... // bu rutini kullanýn										  // 
.................... //////////////////////////////////////////////////////////////// 
.................... #define LCD_DB4   PIN_B4  
.................... #define LCD_DB5   PIN_B5  
.................... #define LCD_DB6   PIN_B6  
.................... #define LCD_DB7   PIN_B7  
....................  
.................... #define LCD_E     PIN_B3  
.................... #define LCD_RS    PIN_B2  
....................        
....................  
.................... //========================================  
....................  
.................... #define lcd_type 2        // 0=5x7, 1=5x10, 2=2 lines  
.................... #define lcd_line_two 0x40 // LCD RAM address for the 2nd line  
.................... byte lcdline; 
....................  
.................... int8 const LCD_INIT_STRING[4] =  
.................... {  
....................  0x20 | (lcd_type << 2), // Func set: 4-bit, 2 lines, 5x8 dots  
....................  0xc,                    // Display on  
....................  1,                      // Clear display  
....................  6                       // Increment cursor  
....................  };  
....................                                
....................  
.................... //-------------------------------------  
.................... void lcd_send_nibble(int8 nibble)  
.................... {  
.................... // Note:  !! converts an integer expression  
.................... // to a boolean (1 or 0).  
....................  output_bit(LCD_DB4, !!(nibble & 1));  
008C:  BTFSC  30.0
008D:  GOTO   090
008E:  BCF    06.4
008F:  GOTO   091
0090:  BSF    06.4
0091:  BSF    03.5
0092:  BCF    06.4
....................  output_bit(LCD_DB5, !!(nibble & 2));   
0093:  BCF    03.5
0094:  BTFSC  30.1
0095:  GOTO   098
0096:  BCF    06.5
0097:  GOTO   099
0098:  BSF    06.5
0099:  BSF    03.5
009A:  BCF    06.5
....................  output_bit(LCD_DB6, !!(nibble & 4));     
009B:  BCF    03.5
009C:  BTFSC  30.2
009D:  GOTO   0A0
009E:  BCF    06.6
009F:  GOTO   0A1
00A0:  BSF    06.6
00A1:  BSF    03.5
00A2:  BCF    06.6
....................  output_bit(LCD_DB7, !!(nibble & 8));     
00A3:  BCF    03.5
00A4:  BTFSC  30.3
00A5:  GOTO   0A8
00A6:  BCF    06.7
00A7:  GOTO   0A9
00A8:  BSF    06.7
00A9:  BSF    03.5
00AA:  BCF    06.7
....................  
....................  delay_cycles(10);  
00AB:  MOVLW  03
00AC:  MOVWF  77
00AD:  DECFSZ 77,F
00AE:  GOTO   0AD
....................  output_high(LCD_E);  
00AF:  BCF    06.3
00B0:  BCF    03.5
00B1:  BSF    06.3
....................  delay_us(20);  
00B2:  MOVLW  06
00B3:  MOVWF  77
00B4:  DECFSZ 77,F
00B5:  GOTO   0B4
00B6:  NOP
....................  output_low(LCD_E);  
00B7:  BSF    03.5
00B8:  BCF    06.3
00B9:  BCF    03.5
00BA:  BCF    06.3
.................... }  
00BB:  RETLW  00
....................   
.................... // Send a byte to the LCD.  
.................... void lcd_send_byte(int8 address, int8 n)  
.................... {  
.................... output_low(LCD_RS);  
00BC:  BSF    03.5
00BD:  BCF    06.2
00BE:  BCF    03.5
00BF:  BCF    06.2
....................  
....................  
.................... if(address)  
00C0:  MOVF   2D,F
00C1:  BTFSC  03.2
00C2:  GOTO   0C8
....................    output_high(LCD_RS);  
00C3:  BSF    03.5
00C4:  BCF    06.2
00C5:  BCF    03.5
00C6:  BSF    06.2
.................... else  
00C7:  GOTO   0CC
....................    output_low(LCD_RS);  
00C8:  BSF    03.5
00C9:  BCF    06.2
00CA:  BCF    03.5
00CB:  BCF    06.2
....................        
....................  delay_cycles(10);  
00CC:  MOVLW  03
00CD:  MOVWF  77
00CE:  DECFSZ 77,F
00CF:  GOTO   0CE
....................  
....................  
.................... output_low(LCD_E);  
00D0:  BSF    03.5
00D1:  BCF    06.3
00D2:  BCF    03.5
00D3:  BCF    06.3
....................  
.................... lcd_send_nibble(n >> 4);  
00D4:  SWAPF  2E,W
00D5:  MOVWF  2F
00D6:  MOVLW  0F
00D7:  ANDWF  2F,F
00D8:  MOVF   2F,W
00D9:  MOVWF  30
00DA:  CALL   08C
.................... lcd_send_nibble(n & 0xf);  
00DB:  MOVF   2E,W
00DC:  ANDLW  0F
00DD:  MOVWF  2F
00DE:  MOVWF  30
00DF:  CALL   08C
.................... }  
00E0:  RETLW  00
....................  
.................... //----------------------------  
.................... void lcd_init(void)  
.................... {  
.................... int8 i;  
....................  
.................... output_low(LCD_RS);  
00E1:  BSF    03.5
00E2:  BCF    06.2
00E3:  BCF    03.5
00E4:  BCF    06.2
.................... output_low(LCD_E);  
00E5:  BSF    03.5
00E6:  BCF    06.3
00E7:  BCF    03.5
00E8:  BCF    06.3
.................... delay_ms(20);  
00E9:  MOVLW  14
00EA:  MOVWF  2A
00EB:  CALL   077
.................... for(i=0 ;i < 3; i++)  
00EC:  CLRF   23
00ED:  MOVF   23,W
00EE:  SUBLW  02
00EF:  BTFSS  03.0
00F0:  GOTO   0F9
....................    {  
....................     lcd_send_nibble(0x03);  
00F1:  MOVLW  03
00F2:  MOVWF  30
00F3:  CALL   08C
....................     delay_ms(15);  
00F4:  MOVLW  0F
00F5:  MOVWF  2A
00F6:  CALL   077
....................    }  
00F7:  INCF   23,F
00F8:  GOTO   0ED
....................  
.................... lcd_send_nibble(0x02);  
00F9:  MOVLW  02
00FA:  MOVWF  30
00FB:  CALL   08C
....................  
.................... for(i=0; i < sizeof(LCD_INIT_STRING); i++)  
00FC:  CLRF   23
00FD:  MOVF   23,W
00FE:  SUBLW  03
00FF:  BTFSS  03.0
0100:  GOTO   10A
....................    {  
....................     lcd_send_byte(0, LCD_INIT_STRING[i]);  
0101:  MOVF   23,W
0102:  CALL   004
0103:  MOVWF  24
0104:  CLRF   2D
0105:  MOVF   24,W
0106:  MOVWF  2E
0107:  CALL   0BC
....................      
....................    }  
0108:  INCF   23,F
0109:  GOTO   0FD
....................  
.................... }  
010A:  BCF    0A.3
010B:  BCF    0A.4
010C:  GOTO   1E3 (RETURN)
....................  
.................... //----------------------------  
....................  
.................... void lcd_gotoxy( BYTE y, BYTE x) { 
....................    BYTE address; 
....................  
....................    switch(y) { 
010D:  MOVLW  01
010E:  SUBWF  2A,W
010F:  ADDLW  FC
0110:  BTFSC  03.0
0111:  GOTO   120
0112:  ADDLW  04
0113:  GOTO   128
....................      case 1 : address=0x80;break; 
0114:  MOVLW  80
0115:  MOVWF  2C
0116:  GOTO   120
....................      case 2 : address=0xc0;break; 
0117:  MOVLW  C0
0118:  MOVWF  2C
0119:  GOTO   120
....................      case 3 : address=0x94;break; 
011A:  MOVLW  94
011B:  MOVWF  2C
011C:  GOTO   120
....................      case 4 : address=0xd4;break; 
011D:  MOVLW  D4
011E:  MOVWF  2C
011F:  GOTO   120
....................    } 
....................    address+=x-1; 
0120:  MOVLW  01
0121:  SUBWF  2B,W
0122:  ADDWF  2C,F
....................    lcd_send_byte(0,address); 
0123:  CLRF   2D
0124:  MOVF   2C,W
0125:  MOVWF  2E
0126:  CALL   0BC
.................... }  
0127:  RETLW  00
....................  
.................... //-----------------------------  
....................  
....................  
.................... void lcd_putc( char c) { 
....................    switch (c) { 
*
0130:  MOVF   29,W
0131:  XORLW  0C
0132:  BTFSC  03.2
0133:  GOTO   13B
0134:  XORLW  06
0135:  BTFSC  03.2
0136:  GOTO   145
0137:  XORLW  02
0138:  BTFSC  03.2
0139:  GOTO   14C
013A:  GOTO   151
....................      case '\f'   : lcd_send_byte(0,1); 
013B:  CLRF   2D
013C:  MOVLW  01
013D:  MOVWF  2E
013E:  CALL   0BC
....................                    lcdline=1; 
013F:  MOVLW  01
0140:  MOVWF  20
....................                    delay_ms(10); 
0141:  MOVLW  0A
0142:  MOVWF  2A
0143:  CALL   077
....................                                            break; 
0144:  GOTO   157
....................      case '\n'   : lcd_gotoxy(1,++lcdline); break; 
0145:  INCF   20,F
0146:  MOVLW  01
0147:  MOVWF  2A
0148:  MOVF   20,W
0149:  MOVWF  2B
014A:  CALL   10D
014B:  GOTO   157
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
014C:  CLRF   2D
014D:  MOVLW  10
014E:  MOVWF  2E
014F:  CALL   0BC
0150:  GOTO   157
....................      default     : lcd_send_byte(1,c);     break; 
0151:  MOVLW  01
0152:  MOVWF  2D
0153:  MOVF   29,W
0154:  MOVWF  2E
0155:  CALL   0BC
0156:  GOTO   157
....................    } 
.................... } 
0157:  RETLW  00
....................  
....................  
....................  
....................  
....................  
....................  
.................... void main() 
.................... { 
*
01D2:  CLRF   04
01D3:  BCF    03.7
01D4:  MOVLW  1F
01D5:  ANDWF  03,F
01D6:  BSF    03.5
01D7:  BSF    1F.0
01D8:  BSF    1F.1
01D9:  BSF    1F.2
01DA:  BCF    1F.3
.................... int y=0,a=0; 
01DB:  BCF    03.5
01DC:  CLRF   21
01DD:  CLRF   22
.................... output_b(0x00); 
01DE:  BSF    03.5
01DF:  CLRF   06
01E0:  BCF    03.5
01E1:  CLRF   06
.................... lcd_init(); 
01E2:  GOTO   0E1
.................... printf(lcd_putc,"\fADI-SOYADI"); 
01E3:  CLRF   23
01E4:  MOVF   23,W
01E5:  CALL   00C
01E6:  INCF   23,F
01E7:  MOVWF  77
01E8:  MOVWF  29
01E9:  CALL   130
01EA:  MOVLW  0B
01EB:  SUBWF  23,W
01EC:  BTFSS  03.2
01ED:  GOTO   1E4
.................... DELAY_ms(3000); 
01EE:  MOVLW  0C
01EF:  MOVWF  23
01F0:  MOVLW  FA
01F1:  MOVWF  2A
01F2:  CALL   077
01F3:  DECFSZ 23,F
01F4:  GOTO   1F0
.................... printf(lcd_putc,"\fBASLATMAK iCiN   "); 
01F5:  CLRF   23
01F6:  MOVF   23,W
01F7:  CALL   01C
01F8:  INCF   23,F
01F9:  MOVWF  77
01FA:  MOVWF  29
01FB:  CALL   130
01FC:  MOVLW  0F
01FD:  SUBWF  23,W
01FE:  BTFSS  03.2
01FF:  GOTO   1F6
0200:  MOVLW  03
0201:  MOVWF  24
0202:  MOVLW  20
0203:  MOVWF  29
0204:  CALL   130
0205:  DECFSZ 24,F
0206:  GOTO   202
.................... lcd_gotoxy(2,1); 
0207:  MOVLW  02
0208:  MOVWF  2A
0209:  MOVLW  01
020A:  MOVWF  2B
020B:  CALL   10D
.................... printf(lcd_putc," BUTONA BASINIZ  "); 
020C:  CLRF   23
020D:  MOVF   23,W
020E:  CALL   030
020F:  INCF   23,F
0210:  MOVWF  77
0211:  MOVWF  29
0212:  CALL   130
0213:  MOVLW  11
0214:  SUBWF  23,W
0215:  BTFSS  03.2
0216:  GOTO   20D
.................... while(1) 
.................... {if(input(pin_a0)==1) 
0217:  BSF    03.5
0218:  BSF    05.0
0219:  BCF    03.5
021A:  BTFSS  05.0
021B:  GOTO   224
.................... {delay_ms(300); 
021C:  MOVLW  02
021D:  MOVWF  23
021E:  MOVLW  96
021F:  MOVWF  2A
0220:  CALL   077
0221:  DECFSZ 23,F
0222:  GOTO   21E
.................... goto ana;}} 
0223:  GOTO   225
0224:  GOTO   217
.................... ana: 
....................  { 
....................   printf(lcd_putc,"\fiYi EGLENCELER  "); 
0225:  CLRF   23
0226:  MOVF   23,W
0227:  CALL   046
0228:  INCF   23,F
0229:  MOVWF  77
022A:  MOVWF  29
022B:  CALL   130
022C:  MOVLW  11
022D:  SUBWF  23,W
022E:  BTFSS  03.2
022F:  GOTO   226
....................    delay_ms(1000); 
0230:  MOVLW  04
0231:  MOVWF  23
0232:  MOVLW  FA
0233:  MOVWF  2A
0234:  CALL   077
0235:  DECFSZ 23,F
0236:  GOTO   232
....................    lcd_gotoxy(1,1); 
0237:  MOVLW  01
0238:  MOVWF  2A
0239:  MOVWF  2B
023A:  CALL   10D
....................    printf(lcd_putc,"\fHOME  "); 
023B:  CLRF   23
023C:  MOVF   23,W
023D:  CALL   05C
023E:  INCF   23,F
023F:  MOVWF  77
0240:  MOVWF  29
0241:  CALL   130
0242:  MOVLW  07
0243:  SUBWF  23,W
0244:  BTFSS  03.2
0245:  GOTO   23C
....................    delay_ms(1000); 
0246:  MOVLW  04
0247:  MOVWF  23
0248:  MOVLW  FA
0249:  MOVWF  2A
024A:  CALL   077
024B:  DECFSZ 23,F
024C:  GOTO   248
....................    lcd_gotoxy(1,8); 
024D:  MOVLW  01
024E:  MOVWF  2A
024F:  MOVLW  08
0250:  MOVWF  2B
0251:  CALL   10D
....................    printf(lcd_putc,"OPPOSiTE  "); 
0252:  CLRF   23
0253:  MOVF   23,W
0254:  CALL   068
0255:  INCF   23,F
0256:  MOVWF  77
0257:  MOVWF  29
0258:  CALL   130
0259:  MOVLW  0A
025A:  SUBWF  23,W
025B:  BTFSS  03.2
025C:  GOTO   253
....................    delay_ms(1000); 
025D:  MOVLW  04
025E:  MOVWF  23
025F:  MOVLW  FA
0260:  MOVWF  2A
0261:  CALL   077
0262:  DECFSZ 23,F
0263:  GOTO   25F
....................    lcd_gotoxy(2,1); 
0264:  MOVLW  02
0265:  MOVWF  2A
0266:  MOVLW  01
0267:  MOVWF  2B
0268:  CALL   10D
....................    printf(lcd_putc,"%02d" ,y); 
0269:  MOVF   21,W
026A:  MOVWF  23
026B:  MOVLW  01
026C:  MOVWF  24
026D:  CALL   16D
....................    delay_ms(500); 
026E:  MOVLW  02
026F:  MOVWF  23
0270:  MOVLW  FA
0271:  MOVWF  2A
0272:  CALL   077
0273:  DECFSZ 23,F
0274:  GOTO   270
....................    lcd_gotoxy(2,11); 
0275:  MOVLW  02
0276:  MOVWF  2A
0277:  MOVLW  0B
0278:  MOVWF  2B
0279:  CALL   10D
....................    printf(lcd_putc,"%02d",a); 
027A:  MOVF   22,W
027B:  MOVWF  23
027C:  MOVLW  01
027D:  MOVWF  24
027E:  CALL   16D
.................... if(input(pin_a1)==1) 
027F:  BSF    03.5
0280:  BSF    05.1
0281:  BCF    03.5
0282:  BTFSS  05.1
0283:  GOTO   28C
.................... { 
.................... delay_ms(300); 
0284:  MOVLW  02
0285:  MOVWF  23
0286:  MOVLW  96
0287:  MOVWF  2A
0288:  CALL   077
0289:  DECFSZ 23,F
028A:  GOTO   286
.................... goto HA; 
028B:  GOTO   29E
.................... } 
.................... if(input(pin_a2)==1) 
028C:  BSF    03.5
028D:  BSF    05.2
028E:  BCF    03.5
028F:  BTFSS  05.2
0290:  GOTO   292
.................... {goto HE;} 
0291:  GOTO   2B1
.................... if(input(pin_a3)==1) 
0292:  BSF    03.5
0293:  BSF    05.3
0294:  BCF    03.5
0295:  BTFSS  05.3
0296:  GOTO   298
.................... {goto OA;} 
0297:  GOTO   2E1
.................... if(input(pin_a4)==1) 
0298:  BSF    03.5
0299:  BSF    05.4
029A:  BCF    03.5
029B:  BTFSS  05.4
029C:  GOTO   29E
.................... {goto OE;} 
029D:  GOTO   2FA
.................... //if(input(pin_a1)==1) 
.................... //{goto rst;} 
.................... } 
.................... HA: 
.................... y++; 
029E:  INCF   21,F
....................    lcd_gotoxy(2,1); 
029F:  MOVLW  02
02A0:  MOVWF  2A
02A1:  MOVLW  01
02A2:  MOVWF  2B
02A3:  CALL   10D
....................    printf(lcd_putc,"%02d",y); 
02A4:  MOVF   21,W
02A5:  MOVWF  23
02A6:  MOVLW  01
02A7:  MOVWF  24
02A8:  CALL   16D
....................    delay_ms(500); 
02A9:  MOVLW  02
02AA:  MOVWF  23
02AB:  MOVLW  FA
02AC:  MOVWF  2A
02AD:  CALL   077
02AE:  DECFSZ 23,F
02AF:  GOTO   2AB
....................   goto ana; 
02B0:  GOTO   225
.................... HE: 
.................... {delay_ms(300); 
02B1:  MOVLW  02
02B2:  MOVWF  23
02B3:  MOVLW  96
02B4:  MOVWF  2A
02B5:  CALL   077
02B6:  DECFSZ 23,F
02B7:  GOTO   2B3
.................... y--; 
02B8:  DECF   21,F
....................    lcd_gotoxy(2,1); 
02B9:  MOVLW  02
02BA:  MOVWF  2A
02BB:  MOVLW  01
02BC:  MOVWF  2B
02BD:  CALL   10D
....................    printf(lcd_putc,"%02d" ,y); 
02BE:  MOVF   21,W
02BF:  MOVWF  23
02C0:  MOVLW  01
02C1:  MOVWF  24
02C2:  CALL   16D
....................    delay_ms(500); 
02C3:  MOVLW  02
02C4:  MOVWF  23
02C5:  MOVLW  FA
02C6:  MOVWF  2A
02C7:  CALL   077
02C8:  DECFSZ 23,F
02C9:  GOTO   2C5
.................... if(y=-1) 
02CA:  MOVLW  FF
02CB:  MOVWF  21
02CC:  MOVF   21,F
02CD:  BTFSC  03.2
02CE:  GOTO   2E1
.................... {y=0; 
02CF:  CLRF   21
.................... lcd_gotoxy(2,1); 
02D0:  MOVLW  02
02D1:  MOVWF  2A
02D2:  MOVLW  01
02D3:  MOVWF  2B
02D4:  CALL   10D
....................    printf(lcd_putc,"%02d" ,y); 
02D5:  MOVF   21,W
02D6:  MOVWF  23
02D7:  MOVLW  01
02D8:  MOVWF  24
02D9:  CALL   16D
....................    delay_ms(500); 
02DA:  MOVLW  02
02DB:  MOVWF  23
02DC:  MOVLW  FA
02DD:  MOVWF  2A
02DE:  CALL   077
02DF:  DECFSZ 23,F
02E0:  GOTO   2DC
.................... } 
.................... } 
.................... OA: 
.................... { 
.................... delay_ms(300); 
02E1:  MOVLW  02
02E2:  MOVWF  23
02E3:  MOVLW  96
02E4:  MOVWF  2A
02E5:  CALL   077
02E6:  DECFSZ 23,F
02E7:  GOTO   2E3
.................... a++; 
02E8:  INCF   22,F
....................    lcd_gotoxy(2,1); 
02E9:  MOVLW  02
02EA:  MOVWF  2A
02EB:  MOVLW  01
02EC:  MOVWF  2B
02ED:  CALL   10D
....................    printf(lcd_putc,"%02d" ,a); 
02EE:  MOVF   22,W
02EF:  MOVWF  23
02F0:  MOVLW  01
02F1:  MOVWF  24
02F2:  CALL   16D
....................    delay_ms(500); 
02F3:  MOVLW  02
02F4:  MOVWF  23
02F5:  MOVLW  FA
02F6:  MOVWF  2A
02F7:  CALL   077
02F8:  DECFSZ 23,F
02F9:  GOTO   2F5
.................... } 
.................... OE: 
.................... { 
.................... delay_ms(300); 
02FA:  MOVLW  02
02FB:  MOVWF  23
02FC:  MOVLW  96
02FD:  MOVWF  2A
02FE:  CALL   077
02FF:  DECFSZ 23,F
0300:  GOTO   2FC
.................... a--; 
0301:  DECF   22,F
....................    lcd_gotoxy(2,1); 
0302:  MOVLW  02
0303:  MOVWF  2A
0304:  MOVLW  01
0305:  MOVWF  2B
0306:  CALL   10D
....................    printf(lcd_putc,"%02d" ,a); 
0307:  MOVF   22,W
0308:  MOVWF  23
0309:  MOVLW  01
030A:  MOVWF  24
030B:  CALL   16D
....................    delay_ms(500); 
030C:  MOVLW  02
030D:  MOVWF  23
030E:  MOVLW  FA
030F:  MOVWF  2A
0310:  CALL   077
0311:  DECFSZ 23,F
0312:  GOTO   30E
.................... if(y=-1) 
0313:  MOVLW  FF
0314:  MOVWF  21
0315:  MOVF   21,F
0316:  BTFSC  03.2
0317:  GOTO   32A
.................... {y=0; 
0318:  CLRF   21
.................... lcd_gotoxy(2,1); 
0319:  MOVLW  02
031A:  MOVWF  2A
031B:  MOVLW  01
031C:  MOVWF  2B
031D:  CALL   10D
....................    printf(lcd_putc,"%02d" ,a); 
031E:  MOVF   22,W
031F:  MOVWF  23
0320:  MOVLW  01
0321:  MOVWF  24
0322:  CALL   16D
....................    delay_ms(500); 
0323:  MOVLW  02
0324:  MOVWF  23
0325:  MOVLW  FA
0326:  MOVWF  2A
0327:  CALL   077
0328:  DECFSZ 23,F
0329:  GOTO   325
.................... } 
.................... } 
....................  
....................  
....................  
.................... } 
032A:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
